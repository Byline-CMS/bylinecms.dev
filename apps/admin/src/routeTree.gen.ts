/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PagesIndexRouteImport } from './routes/pages/index'
import { Route as PagesCreateRouteImport } from './routes/pages/create'
import { Route as PagesPostidRouteImport } from './routes/pages/$postid'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PagesIndexRoute = PagesIndexRouteImport.update({
  id: '/pages/',
  path: '/pages/',
  getParentRoute: () => rootRouteImport,
} as any)
const PagesCreateRoute = PagesCreateRouteImport.update({
  id: '/pages/create',
  path: '/pages/create',
  getParentRoute: () => rootRouteImport,
} as any)
const PagesPostidRoute = PagesPostidRouteImport.update({
  id: '/pages/$postid',
  path: '/pages/$postid',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/pages/$postid': typeof PagesPostidRoute
  '/pages/create': typeof PagesCreateRoute
  '/pages': typeof PagesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/pages/$postid': typeof PagesPostidRoute
  '/pages/create': typeof PagesCreateRoute
  '/pages': typeof PagesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/pages/$postid': typeof PagesPostidRoute
  '/pages/create': typeof PagesCreateRoute
  '/pages/': typeof PagesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/pages/$postid' | '/pages/create' | '/pages'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/pages/$postid' | '/pages/create' | '/pages'
  id: '__root__' | '/' | '/pages/$postid' | '/pages/create' | '/pages/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PagesPostidRoute: typeof PagesPostidRoute
  PagesCreateRoute: typeof PagesCreateRoute
  PagesIndexRoute: typeof PagesIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pages/': {
      id: '/pages/'
      path: '/pages'
      fullPath: '/pages'
      preLoaderRoute: typeof PagesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pages/create': {
      id: '/pages/create'
      path: '/pages/create'
      fullPath: '/pages/create'
      preLoaderRoute: typeof PagesCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pages/$postid': {
      id: '/pages/$postid'
      path: '/pages/$postid'
      fullPath: '/pages/$postid'
      preLoaderRoute: typeof PagesPostidRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PagesPostidRoute: PagesPostidRoute,
  PagesCreateRoute: PagesCreateRoute,
  PagesIndexRoute: PagesIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
