/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as CollectionsPagesIndexRouteImport } from './routes/collections/pages/index'
import { Route as CollectionsPagesCreateRouteImport } from './routes/collections/pages/create'
import { Route as CollectionsPagesPostidRouteImport } from './routes/collections/pages/$postid'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const CollectionsPagesIndexRoute = CollectionsPagesIndexRouteImport.update({
  id: '/collections/pages/',
  path: '/collections/pages/',
  getParentRoute: () => rootRouteImport,
} as any)
const CollectionsPagesCreateRoute = CollectionsPagesCreateRouteImport.update({
  id: '/collections/pages/create',
  path: '/collections/pages/create',
  getParentRoute: () => rootRouteImport,
} as any)
const CollectionsPagesPostidRoute = CollectionsPagesPostidRouteImport.update({
  id: '/collections/pages/$postid',
  path: '/collections/pages/$postid',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/collections/pages/$postid': typeof CollectionsPagesPostidRoute
  '/collections/pages/create': typeof CollectionsPagesCreateRoute
  '/collections/pages': typeof CollectionsPagesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/collections/pages/$postid': typeof CollectionsPagesPostidRoute
  '/collections/pages/create': typeof CollectionsPagesCreateRoute
  '/collections/pages': typeof CollectionsPagesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/collections/pages/$postid': typeof CollectionsPagesPostidRoute
  '/collections/pages/create': typeof CollectionsPagesCreateRoute
  '/collections/pages/': typeof CollectionsPagesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/collections/pages/$postid'
    | '/collections/pages/create'
    | '/collections/pages'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/collections/pages/$postid'
    | '/collections/pages/create'
    | '/collections/pages'
  id:
    | '__root__'
    | '/'
    | '/collections/pages/$postid'
    | '/collections/pages/create'
    | '/collections/pages/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CollectionsPagesPostidRoute: typeof CollectionsPagesPostidRoute
  CollectionsPagesCreateRoute: typeof CollectionsPagesCreateRoute
  CollectionsPagesIndexRoute: typeof CollectionsPagesIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/collections/pages/': {
      id: '/collections/pages/'
      path: '/collections/pages'
      fullPath: '/collections/pages'
      preLoaderRoute: typeof CollectionsPagesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/collections/pages/create': {
      id: '/collections/pages/create'
      path: '/collections/pages/create'
      fullPath: '/collections/pages/create'
      preLoaderRoute: typeof CollectionsPagesCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/collections/pages/$postid': {
      id: '/collections/pages/$postid'
      path: '/collections/pages/$postid'
      fullPath: '/collections/pages/$postid'
      preLoaderRoute: typeof CollectionsPagesPostidRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CollectionsPagesPostidRoute: CollectionsPagesPostidRoute,
  CollectionsPagesCreateRoute: CollectionsPagesCreateRoute,
  CollectionsPagesIndexRoute: CollectionsPagesIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
