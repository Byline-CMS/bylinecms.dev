@import "./autofill.css";
@import "./scrollers.css";

@layer infonomic-theme {
  :root {
    --background: var(--canvas-25);
    --foreground: var(--gray-900);
    --text: var(--gray-900);
    --headings: var(--primary-700);
    --muted: oklch(from var(--foreground) calc(l * 2) c h);
    --border-color: var(--gray-50);
    --shadow: var(--shadow-md);
    --loader-color: var(--primary-500);

    --invert-background: var(--canvas-900);
    --invert-foreground: var(--gray-50);
    --invert-text: var(--gray-50);
    --invert-headings: var(--gray-50);
    --invert-muted: oklch(from var(--foreground) calc(l * 0.75) c h);
    --invert-border-color: var(--canvas-700);
    --invert-shadow: var(--shadow-lg);
    --invert-loader-color: var(--gray-50);
  }

  /* ðŸŒ™ Dark via `.dark` class. We rely on the consuming 
   * application to detect a user's preferred color scheme 
   * - either by header or cookie, and to set a root html 
   * class accordingly
   */
  .dark {
    --background: var(--invert-background);
    --foreground: var(--invert-foreground);
    --text: var(--invert-text);
    --headings: var(--invert-headings);
    --border-color: var(--invert-border-color);
    --shadow: var(--invert-shadow);
    --muted: var(--invert-muted);
    --loader-color: var(--invert-loader-color);
  }

  /* Brute force our not-dark class for now until we figure out
   * a better way to do this. Note - the following does NOT work:
   .dark:not(:where([class~="not-dark"], [class~="not-dark"] *)) {
   */
  .not-dark {
    --background: var(--canvas-25);
    --foreground: var(--gray-900);
    --text: var(--gray-900);
    --headings: var(--primary-800);
    --muted: oklch(from var(--foreground) calc(l * 2) c h);
    --border-color: var(--gray-50);
    --shadow: var(--shadow-md);
    --loader-color: var(--primary-500);
  }

  html {
    font-size: 1rem;
    color: var(--text);
  }

  /* Redeclared here to change the specificity and scope of --prose-body */
  html .not-dark {
    color: var(--text);
  }

  /* Default (light mode) */
  ::selection {
    background-color: var(--theme-600);
    color: white;
  }

  /* Dark mode */
  .dark ::selection {
    background-color: var(--theme-200);
    color: var(--gray-900);
  }

  .background {
    background-color: var(--background);
  }

  .foreground {
    color: var(--foreground);
  }

  .text {
    color: var(--text);
  }

  .headings {
    color: var(--headings);
  }

  .muted {
    font-size: 0.925rem;
    color: var(--muted);
  }

  .shadow {
    box-shadow: var(--shadow);
  }

  .border-color {
    border-color: var(--border-color);
  }

  .border {
    border-color: var(--border-color);
    border-width: var(--border-width-thin);
    border-style: var(--border-style-solid);
    border-radius: var(--border-radius-sm);
  }

  /* External link */
  .external-link::after {
    content: "";
    display: inline-block;
    background-image: url("/external-link-light.svg");
    background-repeat: no-repeat;
    background-position: 20% 50%;
    background-size: 65% auto;
    width: 1.1rem;
    height: 1.1rem;
    margin-right: -5px;
  }

  .dark .external-link::after {
    background-image: url("/external-link-dark.svg");
  }
}
